DROP SCHEMA public cascade;
create schema public;

CREATE TABLE IF NOT EXISTS users
(
    id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  varchar NOT NULL,
    email varchar NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS locations
(
    id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat real NOT NULL,
    lon real NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id                 INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         varchar   NOT NULL,
    category_id        int       NOT NULL,
    created_on         timestamp,
    description        varchar,
    event_date         timestamp NOT NULL,
    initiator_id       int       NOT NULL,
    location_id        int       NOT NULL,
    paid               boolean   NOT NULL,
    participant_limit  int DEFAULT 0,
    published_on       timestamp,
    request_moderation boolean,
    state              varchar,
    title              varchar   NOT NULL,
    CONSTRAINT fk_category_id FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_initiator_id FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT fk_location_id FOREIGN KEY (location_id) REFERENCES locations (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned boolean NOT NULL,
    title  varchar NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS compilation_event
(
    id             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    compilation_id int NOT NULL,
    event_id       int NOT NULL,
    CONSTRAINT fk_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS participation_requests
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      timestamp,
    event_id     int,
    requester_id int,
    status       varchar,
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_requester_id FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS reactions
(
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created     timestamp,
    event_id    int,
    reviewer_id int,
    is_like     boolean,
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_requester_id FOREIGN KEY (reviewer_id) REFERENCES users (id)
)


